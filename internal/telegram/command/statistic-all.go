package command

import (
	"context"
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/ivankoTut/ping-url/internal/model"
	"strings"
)

type (
	// StatisticUrlList —ç—Ç–æ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	StatisticUrlList interface {
		StatisticByUser(userId int64) (model.StatisticResultList, error)
	}

	// StatisticAll —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã –≤—ã–≤–æ–¥–∞ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
	StatisticAll struct {
		statisticRepo StatisticUrlList
	}
)

func NewStatisticAllCommand(statisticRepo StatisticUrlList) *StatisticAll {
	return &StatisticAll{
		statisticRepo: statisticRepo,
	}
}

func (s *StatisticAll) CommandName() string {
	return StatisticAllCommand
}

func (s *StatisticAll) HelpText() string {
	return "help text"
}

func (s *StatisticAll) IsSupport(ctx context.Context, message *tgbotapi.Message) (bool, error) {

	if message.IsCommand() != true {
		return false, nil
	}

	return message.Command() == s.CommandName(), nil
}

func (s *StatisticAll) Run(ctx context.Context, message *tgbotapi.Message) (tgbotapi.MessageConfig, error) {
	userId := message.Chat.ID
	msg := tgbotapi.NewMessage(userId, "")

	_, span := tracer.Start(ctx, fmt.Sprintf("run_statistic_%d", userId))
	defer span.End()

	list, err := s.statisticRepo.StatisticByUser(userId)

	if err != nil {
		span.RecordError(err)
		msg.Text = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ"
		return msg, err
	}

	if len(list) == 0 {
		msg.Text = "–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π"
		return msg, nil
	}

	str := strings.Builder{}
	for _, url := range list {
		str.WriteString(fmt.Sprintf("üåê <code>%s</code> \n"+
			"üîÑ –ö–æ–ª–∏-–≤–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π = <code>%d</code> \n"+
			"‚è≥ –ú–∞–∫—Å-–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è - <code>%.4f</code> \n"+
			"‚è≥ –ú–∏–Ω-–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è - <code>%.4f</code> \n"+
			"üï§ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è - <code>%.4f</code>\n\n",
			url.Url, url.CountPing, url.MaxConnectionTime, url.MinConnectionTime, url.AvgConnectionTime),
		)
	}
	msg.ParseMode = tgbotapi.ModeHTML
	msg.Text = str.String()

	return msg, nil
}

func (s *StatisticAll) ClearData(ctx context.Context, message *tgbotapi.Message) error {
	return nil
}

func (s *StatisticAll) IsComplete(ctx context.Context, message *tgbotapi.Message) (bool, error) {
	return true, nil
}
